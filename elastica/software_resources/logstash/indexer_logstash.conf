input {

	redis {
    		host => "localhost"
		type => "redis-input"
    		data_type => "list"
    		key => "logs"
  	}



}

filter {
    if [mode.N.count] or [mode.0.count] or [mode.1.count] or [mode.2.count] {
	    if ![mode.N.count] {
	         mutate {
	           add_field => { "mode.N.count" => "0" }
	         } 
	    }
	    if ![mode.0.count] {
	         mutate {
	           add_field => { "mode.0.count" => "0" }
	         }
	    }
	    if ![mode.1.count] {
	         mutate {
	           add_field => { "mode.1.count" => "0" }
	         }
	    }
	    if ![mode.2.count] {
	         mutate {
	           add_field => { "mode.2.count" => "0" }
	         }
	    }
    }
}

output {
	if [type]=="app" {
	#	stdout {
	#    	 codec => json 
     #}


                 if [rt.p95] {
                        exec {
                                command => "/share/elasticity_manager/handle.sh %{tier} rt.p95 %{rt.p95}:%{rt.count}"
                        }
                }

                if [mode.N.count] or [mode.0.count] or [mode.1.count] or [mode.2.count] {
                   exec {
                      command => "/share/elasticity_manager/handle1.sh ${tier} modes %{mode.N.count}:%{mode.0.count}:%{mode.1.count}:%{mode.2.count}"
                   }
                }
               #threshold
	#	if [rt.mean] and [rt.mean] >= 100 {
	#	  exec {
     #     	   command => "/root/action.sh +"
     #   		 }
     # 	}
     # 	if [rt.mean] and [rt.mean] <= 50 {
	#	  exec {
     #     	   command => "/root/action.sh -"
     #   		 }
     # 	}
		
		csv {
			csv_options => {"col_sep" => "\t" "row_sep" => "\n"}
			fields => ["timestamp", "tier", "rt.mean", "rt.count"]
			path => "/root/output-app.csv"
		}
 

	}


	if [type]=="system" {
 	 # stdout {
	  #   	    codec => json 
       	#	  }	
	csv {
                  csv_options => {"col_sep" => "\t" "row_sep" => "\r\n"}
                  fields => ["timestamp", "host_name", "ip", "cpu", "mem"]
                  path => "/root/output-system.csv"
        	}
	}
      	     
}

